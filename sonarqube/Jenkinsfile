pipeline {
    agent any

    tools {
        // Asegúrate de que el nombre coincide con la configuración de tu herramienta en Jenkins
        sonar 'sonar'  // Nombre de la herramienta SonarQube Scanner configurada
        jdk 'JDK 11'   // Si estás usando un JDK específico, asegúrate de que el nombre sea correcto
    }

    environment {
        SONAR_TOKEN = credentials('sonar')  // Usando las credenciales para SonarQube
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/luimungar3/tienda.git'
            }
        }

        stage('Build') {
            steps {
                // Ejecutar el build de tu proyecto (puede ser Maven, Gradle, etc.)
                sh 'mvn clean install'  // O usa el comando correspondiente a tu proyecto
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv('sonar') {  // Nombre configurado del servidor SonarQube en Jenkins
                        sh '''
                            sonar-scanner \
                            -Dsonar.projectKey=tienda \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://localhost:9001 \
                            -Dsonar.login=$SONAR_TOKEN
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()  // Limpiar el workspace después de cada ejecución
        }
    }
}
