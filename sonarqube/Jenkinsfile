pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/luimungar3/tienda.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') { // Usando el nombre configurado de SonarQube
                    withCredentials([string(credentialsId: 'sonar1', variable: 'sonar')]) {
                        sh """
                            sonar-scanner \
                            -Dsonar.projectKey=tienda \
                            -Dsonar.sources=. \
                            -Dsonar.login=${sonar}
                        """
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 5, unit: 'MINUTES') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Quality Gate failed: ${qg.status}"
                        }
                    }
                }
            }
        }
    }
}
